{
  "frontmatter": {
    "slug": "use-umami-api-on-nuxt",
    "title": "在博客中添加 Umami 访问统计数据",
    "date": "2025-08-17",
    "description": "使用 Umami API 在 Nuxt 博客中展示访问统计数据。",
    "tags": [
      "前端",
      "实用教程"
    ]
  },
  "content": "\r\n最近，我在使用 **Nuxt** 重构我的博客。在 [关于](/about) 页面上，我参考了 [安知鱼](https://blog.anheyu.com/about/) 的布局。其中有一个访问数据统计卡片，原本使用的是 51LA。起初我也尝试过在 Nuxt 中添加它，但发现官方挂件在 Nuxt 中不好直接使用。\r\n\r\n![安知鱼-访问统计](https://cdn.zhengweixin.top/blog/posts/612e9ddb40fe4c3b8f02910c93817ee9.png)\r\n\r\n尝试无果后，我想到了自己两年前搭建的 [Umami](https://umami.is/) 统计服务。\r\n\r\n## Umami 搭建\r\n\r\n我使用的是 Vercel 部署，搭建步骤如下（你也可以选择其他服务商）：\r\n\r\n1. Fork 官方 GitHub 仓库 [umami-software/umami](https://github.com/umami-software/umami)。\r\n\r\n2. 在 Vercel 中创建数据库：\r\n   - 打开 **Storage** 选项卡，创建 PostgreSQL 数据库。\r\n   \r\n   ![vercel-storage](https://cdn.zhengweixin.top/blog/posts/34df58bdbb98404cb8b82dbc55ac356d.png)\r\n\r\n3. 新建项目，选择刚 fork 的仓库。\r\n   - 添加环境变量 `DATABASE_URL`，值为刚创建的数据库地址。例如：\r\n     ```\r\n     postgresql://username:password@localhost:5432/mydb\r\n     ```\r\n     \r\n\r\n到这里，Umami 就部署完成了。本文重点不在部署细节，所以这里只简单说明 😺。\r\n\r\n## API 简介\r\n\r\nUmami 提供了丰富的 API，可参考 [官方文档](https://umami.is/docs/api/authentication)。\r\n\r\n| API                                   | 功能             |\r\n| ------------------------------------ | ---------------- |\r\n| POST /api/auth/login                  | 获取用户信息     |\r\n| GET /api/websites/:websiteId          | 获取网站信息     |\r\n| GET /api/websites/:websiteId/stats    | 获取访问量       |\r\n| GET /api/websites/:websiteId/metrics  | 获取文章阅读量   |\r\n\r\n## 获取 Token\r\n\r\n使用 API 之前，需要先获取账号 **Token**。  \r\n通过 `POST /api/auth/login` 发送账号密码即可获取：\r\n\r\n```json\r\n{\r\n  \"username\": \"your-username\",\r\n  \"password\": \"your-password\"\r\n}\r\n```\r\n\r\n返回示例：\r\n\r\n\r\n```json\r\n{\r\n  \"token\": \"Mcfd5PaVC4cMDSJw51j...dvM+gvwvuDw==\",\r\n  \"user\": {\r\n    \"id\": \"7d7cf1f3-4d81-4a6b-8257-57a2ee4629a2\",\r\n    \"username\": \"visitor\",\r\n    \"createdAt\": \"2025-08-17T03:19:58.646Z\"\r\n  }\r\n}\r\n```\r\n\r\n这里分享一个简单的 Python 脚本示例，用于获取 Token：\r\n\r\n```python\r\nimport requests\r\n\r\n# Umami API 地址\r\nUMAMI_URL = 'https://statistics.zhengweixin.top'\r\n\r\n# 账号密码\r\nUSERNAME = '******'\r\nPASSWORD = '******'\r\n\r\ndef get_token():\r\n    login_url = f\"{UMAMI_URL}/api/auth/login\"\r\n    payload = {\r\n        \"username\": USERNAME,\r\n        \"password\": PASSWORD\r\n    }\r\n    headers = {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    response = requests.post(login_url, json=payload, headers=headers)\r\n    \r\n    if response.status_code == 200:\r\n        data = response.json()\r\n        token = data.get(\"token\")\r\n        user_info = data.get(\"user\")\r\n        print(\"Token:\", token)\r\n        print(\"User info:\", user_info)\r\n        return token\r\n    else:\r\n        print(f\"Failed to get token: {response.status_code} {response.text}\")\r\n        return None\r\n\r\nif __name__ == \"__main__\":\r\n    get_token()\r\n\r\n```\r\n\r\n## 在 Nuxt 页面中使用 API\r\n\r\n获取到 Token 后，在需要使用的页面中添加如下代码：\r\n\r\n```javascript\r\n// 配置\r\nconst UMAMI_URL = 'https://statistics.zhengweixin.top'; //Umami链接\r\nconst WEBSITE_ID = '7441ce23-3587-41b6-8919-e42932fc65d7'; //站点ID\r\nconst TOKEN = '你的Token';\r\nconst CREATED_AT = '2025-08-15T16:00:00.000Z'; //网站创立时间\r\n\r\nconst statsToday = ref(null);\r\nconst statsYesterday = ref(null);\r\nconst statsTotal = ref(null);\r\nconst error = ref(null);\r\n\r\nfunction getDayTimestamps(date = new Date()) {\r\n  const start = new Date(date);\r\n  start.setHours(0, 0, 0, 0);\r\n  const end = new Date(start);\r\n  end.setHours(23, 59, 59, 999);\r\n  return { start: start.getTime(), end: end.getTime() };\r\n}\r\n\r\nonMounted(async () => {\r\n  try {\r\n    const createdAtTs = new Date(CREATED_AT).getTime();\r\n    const now = Date.now();\r\n\r\n    // 今日\r\n    const { start: startToday, end: endToday } = getDayTimestamps();\r\n    statsToday.value = await fetch(`${UMAMI_URL}/api/websites/${WEBSITE_ID}/stats?startAt=${startToday}&endAt=${endToday}`, {\r\n      headers: { Authorization: `Bearer ${TOKEN}` }\r\n    }).then(res => res.json());\r\n\r\n    // 昨日\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    const { start: startYesterday, end: endYesterday } = getDayTimestamps(yesterday);\r\n    statsYesterday.value = await fetch(`${UMAMI_URL}/api/websites/${WEBSITE_ID}/stats?startAt=${startYesterday}&endAt=${endYesterday}`, {\r\n      headers: { Authorization: `Bearer ${TOKEN}` }\r\n    }).then(res => res.json());\r\n\r\n    // 总量\r\n    statsTotal.value = await fetch(`${UMAMI_URL}/api/websites/${WEBSITE_ID}/stats?startAt=${createdAtTs}&endAt=${now}`, {\r\n      headers: { Authorization: `Bearer ${TOKEN}` }\r\n    }).then(res => res.json());\r\n\r\n  } catch (e) {\r\n    error.value = e.message;\r\n  }\r\n});\r\n```\r\n\r\n页面中可用变量：\r\n\r\n|                                |              |\r\n| ------------------------------ | ------------ |\r\n| statsToday.visitors.value      | 今日访问人数 |\r\n| statsToday.pageviews.value     | 今日访问量   |\r\n| statsYesterday.visitors.value  | 昨日访问人数 |\r\n| statsYesterday.pageviews.value | 昨日访问量   |\r\n| statsTotal.pageviews.value     | 本月访问总量 |\r\n| statsTotal.pageviews.value     | 总访问量     |\r\n\r\n"
}